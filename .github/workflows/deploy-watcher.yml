name: Deploy Fargate Watcher

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write        # OIDC için gerekli
  contents: read         # repo içeriğini okuyabilsin

jobs:
  deploy:
    name: Deploy to AWS Fargate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::809278147371:role/auxite-github-oidc
          aws-region: eu-central-1

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image
        env:
          ECR_REGISTRY: 809278147371.dkr.ecr.eu-central-1.amazonaws.com
          ECR_REPOSITORY: auxite-watcher
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Render new ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-def/auxite-watcher.json
          container-name: auxite-watcher
          image: 809278147371.dkr.ecr.eu-central-1.amazonaws.com/auxite-watcher:latest

      - name: Deploy ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          service: auxite-watcher-svc
          cluster: auxite-cluster
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          wait-for-service-stability: true

      - name: Verify deployment
        run: |
          aws ecs describe-services \
            --cluster auxite-cluster \
            --services auxite-watcher-svc \
            --region eu-central-1 \
            --query "services[0].deployments"

      - name: Build & push
        run: |
          REPO=auxite-watcher
          AWS_ACCOUNT_ID=809278147371
          REGION=eu-central-1
          IMAGE=$AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPO:latest

          aws ecr describe-repositories --repository-names "$REPO" --region $REGION \
          || aws ecr create-repository --repository-name "$REPO" --region $REGION

          docker build -t "$IMAGE" .
          docker push "$IMAGE"
